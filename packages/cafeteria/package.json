{
    "name": "cafeteria",
    "version": "2.0.0",
    "private": true,
    "displayName": "Cafeteria",
    "description": "CDP SDK modules development bed",
    "author": {
        "name": "Shin Ogata",
        "email": "Shin.Ogata@jp.sony.com"
    },
    "scripts": {
        "setup": "npm run setup:tasks && npm install && npm run setup:platform",
        "setup:tasks": "node ../master-tasks/provider.js",
        "setup:platform": "node ./tasks/cafeteria.js --operation=platforms",
        "postinstall": "npm run rearrange",
        "test": "run-s -l clean compile lint unit-test",
        "ci": "run-s -l clean compile lint unit-test metrics document build:release",
        "package": "cordova build --release",
        "update": "npm update --save-dev && npm update --save && && npm run update:cdp",
        "update:cdp": "node ./tasks/cafeteria.js --operation=rearrange",
        "depends": "npm list --depth=1",
        "depends:prod": "npm list --depth=0 --only=prod",
        "depends:dev": "npm list --depth=0 --only=dev",
        "debug": "testem -f ./tests/runner/testem-amd.js",
        "clean": "node ./tasks/clean.js && node ./tasks/porting-setup.js --porting=clean",
        "clean:temp": "node ./tasks/clean.js --temp",
        "clean:coverage": "node ./tasks/clean.js --coverage",
        "clean:typedoc": "node ./tasks/clean.js --typedoc",
        "clean:test": "node ./tasks/clean.js --test",
        "clean:built": "node ./tasks/clean.js --built && node ./tasks/porting-setup.js --porting=clean",
        "clean:pkg": "node ./tasks/clean.js --pkg",
        "clean:porting": "node ./tasks/porting-setup.js --porting=clean",
        "compile": "run-p compile:ts compile:scss",
        "compile:ts": "node ./tasks/compile-ts.js",
        "compile:scss": "node ./tasks/compile-scss.js",
        "compile:debug": "run-p compile:debug:*",
        "compile:debug:ts": "npm run compile:ts -- --pkg --app --lib",
        "compile:debug:scss": "npm run compile:scss -- --pkg --app --lib",
        "compile:release": "run-p compile:release:*",
        "compile:release:ts": "npm run compile:ts -- --pkg=release --app --lib",
        "compile:release:scss": "npm run compile:scss -- --pkg --app --lib",
        "build:clean": "node ./tasks/clean.js --pkg --temp && node ./tasks/porting-setup.js --porting=clean",
        "build:config": "node ./tasks/string-replace.js",
        "build:porting": "node ./tasks/porting-setup.js",
        "build:debug": "npm run build:clean && run-p compile:debug copy:debug && node ./tasks/build-addon.js",
        "build:release": "npm run build:clean && run-p compile:release copy:release && node ./tasks/build-addon.js --release",
        "copy:debug": "node ./tasks/copy.js",
        "copy:release": "node ./tasks/copy.js --release",
        "bundle": "node ./tasks/bundle-finalizer.js",
        "minify": "node ./tasks/minify.js",
        "porting:dev": "node ./tasks/porting-setup.js --platform=dev --porting=rebase",
        "porting:android": "node ./tasks/porting-setup.js --platform=android --porting=rebase",
        "porting:ios": "node ./tasks/porting-setup.js --platform=ios --porting=rebase",
        "lint": "run-p -l lint:*",
        "lint:js": "eslint tasks/**/*.js app/scripts/**/*.js platforms/*/porting/scripts/**/*.js -c tests/eslint/eslintrc.json",
        "lint:ts": "tslint --type-check -p ./tsconfig.json -c ./tests/tslint/tslint.json -e app/**/*.d.ts app/**/*.ts platforms/*/porting/scripts/**/*.ts",
        "unit-test": "npm run coverage:exec",
        "unit-test:ci": "testem ci -f ./tests/runner/testem-ci.js",
        "coverage": "run-s clean:coverage compile:ts coverage:exec",
        "coverage:exec": "run-s coverage:instrument unit-test:ci coverage:remap coverage:report",
        "coverage:instrument": "node ./tasks/instrument.js",
        "coverage:remap": "node ./tasks/remap-coverage.js",
        "coverage:report": "nyc report --reporter=lcov --reporter=html --reporter=text --report-dir=docs/reports/coverage --temp-directory=docs/reports/coverage",
        "rearrange": "node ./tasks/external-rearrange.js && node ./tasks/cafeteria.js --operation=rearrange",
        "module": "node ./tasks/clean.js --pkg --temp && node ./tasks/compile-ts.js --pkg=release --lib && node ./tasks/copy.js --task=lib-types && node ./tasks/clean.js --temp",
        "document": "typedoc --out docs/typedoc/ app/",
        "metrics": "npm run compile:ts && plato -r -d docs/reports/metrics -e ./tests/eslint/eslintrc.json -x app/external/ app/**/*.js"
    },
    "license": "Apache-2.0",
    "browserslist": [
        "last 1 Android versions",
        "last 2 ChromeAndroid versions",
        "last 2 iOS versions"
    ],
    "dependencies": {
        "backbone": "^1.3.3",
        "cordova-android": "^6.2.3",
        "cordova-plugin-cdp-nativebridge": "^1.1.0",
        "cordova-plugin-whitelist": "^1.3.2",
        "flipsnap": "^0.6.3",
        "hammerjs": "^2.0.8",
        "hogan.js": "^3.0.2",
        "iscroll": "^5.2.0",
        "jquery": "^3.2.1",
        "jquery-hammerjs": "^2.0.0",
        "requirejs": "^2.3.3",
        "underscore": "^1.8.3"
    },
    "devDependencies": {
        "@types/backbone": "^1.3.34",
        "@types/cordova": "^0.0.34",
        "@types/flipsnap": "^0.0.28",
        "@types/hammerjs": "^2.0.34",
        "@types/i18next": "^8.4.0",
        "@types/iscroll": "^5.2.0",
        "@types/jasmine": "^2.5.53",
        "@types/jquery": "^3.2.6",
        "@types/requirejs": "^2.1.29",
        "@types/underscore": "^1.8.1",
        "autoprefixer": "^7.1.2",
        "clean-css": "^4.1.5",
        "convert-source-map": "^1.5.0",
        "del": "^3.0.0",
        "eslint": "^4.1.1",
        "fs-extra": "^3.0.1",
        "html-minifier": "^3.5.2",
        "node-sass": "^4.5.3",
        "npm-run-all": "^4.0.2",
        "nyc": "^11.0.3",
        "plato": "^1.7.0",
        "postcss-cli": "^4.1.0",
        "source-map": "^0.5.6",
        "tslint": "^5.5.0",
        "typedoc": "^0.7.1",
        "typescript": "^2.4.1",
        "uglify-js": "^3.0.23"
    },
    "cordova": {
        "plugins": {
            "cordova-plugin-whitelist": {},
            "cordova-plugin-cdp-nativebridge": {}
        },
        "platforms": [
            "android"
        ]
    }
}