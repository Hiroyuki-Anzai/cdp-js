{"version":3,"sources":["dist/cdp.core.js"],"names":["root","factory","define","amd","CDP","exports","module","this","self","global","TAG","Function","webRoot","location","baseUrl","exec","href","Config","initialize","options","setTimeout","Patch","apply","success","error","errorInfo","makeErrorInfo","RESULT_CODE","ERROR_CDP_INITIALIZE_FAILED","message","console","fail","consolePatch","nodePatch","count","groupEnd","time","timeEnd","trace","group","dirxml","debug","groupCollapsed","select","info","profile","assert","msIsIndependentlyComposed","clear","dir","warn","log","profileEnd","MSApp","_MSApp_1","originalAppendChild_1","Node","prototype","appendChild","node","execUnsafeLocalFunction","call","originalInsertBefore_1","insertBefore","newElement","referenceElement","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","CANCELED_MESSAGE","s_code2message","0","-1","MODULE_RESULT_CODE_RANGE","resultCode","tag","cause","canceled","msg","code","SUCCEEDED","Error","messageFromResultCode","name","buildErrorName","makeCanceledErrorInfo","isCanceledError","RESULT_CODE_BASE","DECLARE_ERROR_CODE","baseName","localCode","declareResultCode","ASSIGN_RESULT_CODE_BASE","resultCodeBase","ASSIGN_RESULT_CODE","FUNCTION_CODE_RANGE","LOCAL_CODE_BASE","CORE","base","moduleCode","prefix"],"mappings":"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","sourcesContent":["﻿/*!\n * cdp.core.js 2.0.0\n *\n * Date: 2017-07-24T11:13:53.476Z\n */\n(function (root, factory) { if (typeof define === \"function\" && define.amd) { define(function () { return factory(root.CDP || (root.CDP = {})); }); } else if (typeof exports === \"object\") { module.exports = factory(root.CDP || (root.CDP = {})); } else { factory(root.CDP || (root.CDP = {})); } }(((this || 0).self || global), function (CDP) {\nvar CDP;\n(function (CDP) {\n    var TAG = \"[CDP] \";\n    /**\n     * システムの global オブジェクトにアクセス\n     * 通常は Window オブジェクトとなる\n     */\n    CDP.global = Function(\"return this\")();\n    /**\n     * Web root location にアクセス\n     */\n    CDP.webRoot = (function () {\n        if (CDP.global.location) {\n            var baseUrl = /(.+\\/)[^/]*#[^/]+/.exec(CDP.global.location.href);\n            if (!baseUrl) {\n                baseUrl = /(.+\\/)/.exec(CDP.global.location.href);\n            }\n            return baseUrl[1];\n        }\n    })();\n    /**\n     * Config オブジェクトにアクセス\n     */\n    CDP.Config = CDP.Config || CDP.global.Config || {};\n    /**\n     * core の初期化\n     */\n    function initialize(options) {\n        setTimeout(function () {\n            try {\n                CDP.Patch.apply();\n                if (options && typeof options.success === \"function\") {\n                    options.success();\n                }\n            }\n            catch (error) {\n                var errorInfo = CDP.makeErrorInfo(CDP.RESULT_CODE.ERROR_CDP_INITIALIZE_FAILED, TAG, (error && error.message) ? error.message : null, error);\n                console.error(errorInfo.message);\n                if (options && typeof options.fail === \"function\") {\n                    options.fail(errorInfo);\n                }\n            }\n        });\n    }\n    CDP.initialize = initialize;\n})(CDP || (CDP = {}));\nvar CDP;\n(function (CDP) {\n    var TAG = \"[CDP.Patch] \";\n    /**\n     * @class Patch\n     * @brief 実行環境用 Patch 適用ユーティリティクラス\n     */\n    var Patch = (function () {\n        function Patch() {\n        }\n        ///////////////////////////////////////////////////////////////////////\n        // public static methods:\n        /**\n         * パッチの適用\n         */\n        Patch.apply = function () {\n            Patch.consolePatch();\n            Patch.nodePatch();\n        };\n        ///////////////////////////////////////////////////////////////////////\n        // private static methods:\n        // console 用 patch\n        Patch.consolePatch = function () {\n            if (null == CDP.global.console || null == CDP.global.console.error) {\n                CDP.global.console = {\n                    count: function () { },\n                    groupEnd: function () { },\n                    time: function () { },\n                    timeEnd: function () { },\n                    trace: function () { },\n                    group: function () { },\n                    dirxml: function () { },\n                    debug: function () { },\n                    groupCollapsed: function () { },\n                    select: function () { },\n                    info: function () { },\n                    profile: function () { },\n                    assert: function () { },\n                    msIsIndependentlyComposed: function () { },\n                    clear: function () { },\n                    dir: function () { },\n                    warn: function () { },\n                    error: function () { },\n                    log: function () { },\n                    profileEnd: function () { }\n                };\n            }\n        };\n        // WinRT 用 patch\n        Patch.nodePatch = function () {\n            if (\"object\" === typeof MSApp) {\n                var _MSApp_1 = MSApp;\n                var originalAppendChild_1 = Node.prototype.appendChild;\n                Node.prototype.appendChild = function (node) {\n                    var self = this;\n                    return _MSApp_1.execUnsafeLocalFunction(function () {\n                        return originalAppendChild_1.call(self, node);\n                    });\n                };\n                var originalInsertBefore_1 = Node.prototype.insertBefore;\n                Node.prototype.insertBefore = function (newElement, referenceElement) {\n                    var self = this;\n                    return _MSApp_1.execUnsafeLocalFunction(function () {\n                        return originalInsertBefore_1.call(self, newElement, referenceElement);\n                    });\n                };\n            }\n        };\n        return Patch;\n    }());\n    CDP.Patch = Patch;\n})(CDP || (CDP = {}));\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar CDP;\n(function (CDP) {\n    var CANCELED_MESSAGE = \"abort\";\n    var s_code2message = {\n        \"0\": \"operation succeeded.\",\n        \"-1\": \"operation failed.\"\n    };\n    ///////////////////////////////////////////////////////////////////////\n    // error utilities:\n    /**\n     * @enum  RESULT_CODE\n     * @brief アプリケーション全体で使用する共通エラーコード定義\n     */\n    var RESULT_CODE;\n    (function (RESULT_CODE) {\n        RESULT_CODE[RESULT_CODE[\"SUCCEEDED\"] = 0] = \"SUCCEEDED\";\n        RESULT_CODE[RESULT_CODE[\"FAILED\"] = -1] = \"FAILED\";\n    })(RESULT_CODE = CDP.RESULT_CODE || (CDP.RESULT_CODE = {}));\n    // ローカルリザルトコードのアサイン可能数\n    CDP.MODULE_RESULT_CODE_RANGE = 1000;\n    /**\n     * エラー情報生成\n     *\n     * @param resultCode [in] RESULT_CODE を指定\n     * @param [tag]      [in] TAG を指定\n     * @param [message]  [in] メッセージを指定\n     * @param [cause]    [in] 下位のエラーを指定\n     * @returns エラーオブジェクト\n     */\n    function makeErrorInfo(resultCode, tag, message, cause) {\n        var canceled = (cause && CANCELED_MESSAGE === cause.message) ? true : false;\n        var msg = canceled ? CANCELED_MESSAGE : message;\n        var code = canceled ? RESULT_CODE.SUCCEEDED : resultCode;\n        return __assign({}, new Error(msg || messageFromResultCode(code)), {\n            name: buildErrorName(code, tag),\n            code: code,\n            cause: cause,\n        });\n    }\n    CDP.makeErrorInfo = makeErrorInfo;\n    /**\n     * キャンセルエラー情報生成\n     *\n     * @param [cause]    [in] 下位のエラーを指定\n     * @param [tag]      [in] TAG を指定\n     * @returns エラーオブジェクト\n     */\n    function makeCanceledErrorInfo(tag, cause) {\n        return makeErrorInfo(RESULT_CODE.SUCCEEDED, tag, CANCELED_MESSAGE, cause);\n    }\n    CDP.makeCanceledErrorInfo = makeCanceledErrorInfo;\n    /**\n     * エラー情報がキャンセルされたものか判定\n     *\n     * @param error [in] エラー情報\n     * @returns true: キャンセル / false: その他エラー\n     */\n    function isCanceledError(error) {\n        var errorInfo = error;\n        if (errorInfo) {\n            if (RESULT_CODE.SUCCEEDED === errorInfo.code || CANCELED_MESSAGE === errorInfo.message) {\n                return true;\n            }\n        }\n        return false;\n    }\n    CDP.isCanceledError = isCanceledError;\n    /**\n     * @enum  RESULT_CODE_BASE\n     * @brief リザルトコードのオフセット値\n     *        エラーコード対応するモジュール内で 定義を拡張する.\n     */\n    var RESULT_CODE_BASE;\n    (function (RESULT_CODE_BASE) {\n        RESULT_CODE_BASE[RESULT_CODE_BASE[\"CDP_DECLARERATION\"] = 0] = \"CDP_DECLARERATION\";\n        //      MODULE_A = 1 * MODULE_RESULT_CODE_RANGE,    // ex) moduleA: 1001 ～ 1999\n        //      MODULE_B = 2 * MODULE_RESULT_CODE_RANGE,    // ex) moduleB: 2001 ～ 2999\n        //      MODULE_C = 3 * MODULE_RESULT_CODE_RANGE,    // ex) moduleC: 3001 ～ 3999\n        RESULT_CODE_BASE[RESULT_CODE_BASE[\"CDP\"] = 101 * CDP.MODULE_RESULT_CODE_RANGE] = \"CDP\";\n    })(RESULT_CODE_BASE = CDP.RESULT_CODE_BASE || (CDP.RESULT_CODE_BASE = {}));\n    // \"CDP\" 以外の namespace で定義した場合は、ASSING ユーティリティをコールする.\n    //  ASSIGN_RESULT_CODE_BASE(RESULT_CODE_BASE);\n    // エラーコード生成\n    function DECLARE_ERROR_CODE(baseName, localCode, message) {\n        return declareResultCode(CDP.RESULT_CODE_BASE[baseName], localCode, message);\n    }\n    CDP.DECLARE_ERROR_CODE = DECLARE_ERROR_CODE;\n    /**\n     * RESULT_CODE_BASE のアサイン\n     */\n    function ASSIGN_RESULT_CODE_BASE(resultCodeBase) {\n        CDP.RESULT_CODE_BASE = __assign({}, CDP.RESULT_CODE_BASE, resultCodeBase);\n    }\n    CDP.ASSIGN_RESULT_CODE_BASE = ASSIGN_RESULT_CODE_BASE;\n    /**\n     * RESULT_CODE のアサイン\n     */\n    function ASSIGN_RESULT_CODE(resultCode) {\n        CDP.RESULT_CODE = __assign({}, CDP.RESULT_CODE, resultCode);\n    }\n    CDP.ASSIGN_RESULT_CODE = ASSIGN_RESULT_CODE;\n    ///////////////////////////////////////////////////////////////////////\n    // module error declaration:\n    var FUNCTION_CODE_RANGE = 10;\n    /**\n     * @enum  LOCAL_CODE_BASE\n     * @brief cdp.core 内のローカルコードオフセット値\n     */\n    var LOCAL_CODE_BASE;\n    (function (LOCAL_CODE_BASE) {\n        LOCAL_CODE_BASE[LOCAL_CODE_BASE[\"CORE\"] = 0] = \"CORE\";\n        LOCAL_CODE_BASE[LOCAL_CODE_BASE[\"PATCH\"] = 1 * FUNCTION_CODE_RANGE] = \"PATCH\";\n    })(LOCAL_CODE_BASE || (LOCAL_CODE_BASE = {}));\n    /**\n     * @enum  RESULT_CODE\n     * @brief FES.Utils のエラーコード定義\n     *        モジュール別に拡張可能\n     */\n    (function (RESULT_CODE) {\n        RESULT_CODE[RESULT_CODE[\"ERROR_CDP_DECLARATION_CDP\"] = 0] = \"ERROR_CDP_DECLARATION_CDP\";\n        RESULT_CODE[RESULT_CODE[\"ERROR_CDP_INITIALIZE_FAILED\"] = DECLARE_ERROR_CODE(\"CDP\", LOCAL_CODE_BASE.CORE + 1, \"initialized failed.\")] = \"ERROR_CDP_INITIALIZE_FAILED\";\n    })(RESULT_CODE = CDP.RESULT_CODE || (CDP.RESULT_CODE = {}));\n    // \"CDP\" 以外の namespace で定義した場合は、ASSING ユーティリティをコールする.\n    //  ASSIGN_RESULT_CODE_BASE(RESULT_CODE);\n    ///////////////////////////////////////////////////////////////////////\n    // private static methods:\n    /**\n     * リザルトコードの登録\n     *\n     * @param base       [in] RESULT_CODE_BASE を指定\n     * @param moduleCode [in] モジュールで一意になる数値 (0 < localCode < 1000)\n     * @param [message]  [in] リザルトコードに紐づくメッセージ\n     * @returns リザルトコード\n     */\n    function declareResultCode(base, moduleCode, message) {\n        if (moduleCode <= 0 || CDP.MODULE_RESULT_CODE_RANGE <= moduleCode) {\n            console.error(\"declareResultCode(), invalid localCode range. [localCode: \" + moduleCode + \"]\");\n            return;\n        }\n        var resultCode = base + moduleCode;\n        s_code2message[resultCode] = message ? message : (\"[RESULT_CODE: \" + resultCode + \"]\");\n        return resultCode;\n    }\n    /**\n     * リザルトコードから登録されているメッセージを取得\n     *\n     * @param resultCode [in] リザルトコード\n     * @returns エラーメッセージ\n     */\n    function messageFromResultCode(resultCode) {\n        if (s_code2message[resultCode]) {\n            return s_code2message[resultCode];\n        }\n        else {\n            return \"unregistered result code. [RESULT_CODE: \" + resultCode + \"]\";\n        }\n    }\n    /**\n     * リザルトコードから登録されているリザルトコード文字列を取得\n     *\n     * @param resultCode [in] リザルトコード\n     * @param tag        [in] TAG を指定\n     * @returns リザルトコード識別文字列\n     */\n    function buildErrorName(resultCode, tag) {\n        var prefix = tag || \"\";\n        if (RESULT_CODE[resultCode]) {\n            return prefix + RESULT_CODE[resultCode] + \": \";\n        }\n        else {\n            return prefix;\n        }\n    }\n})(CDP || (CDP = {}));\n\nreturn CDP; }));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}