(function(root,factory){if(typeof define==="function"&&define.amd){define(["jquery","cdp.core","cdp.promise"],function($,CDP){return factory($,CDP)})}else{factory(root.jQuery||root.$,root.CDP||(root.CDP={}))}})(this,function($,CDP){var CDP;(function(CDP){var Promise=CDP.Promise;var TAG="[CDP.i18n] ";function initializeI18N(settings){return new Promise(function(resolve){var i18nSettings=settings||{};var i18nOptions=function(resources){if(resources){for(var lng in resources){if(resources.hasOwnProperty(lng)){for(var ns in resources[lng]){if(resources[lng].hasOwnProperty(ns)){resources[lng][ns]=getLocaleFallbackResource(resources[lng][ns])}}}}i18nSettings.options.resources=resources;return i18nSettings.options}else{return i18nSettings.options}}(i18nSettings.fallbackResources);require(["jqueryI18next"],function($18Next){require(["i18next","i18nextXHRBackend","i18nextLocalStorageCache","i18nextSprintfPostProcessor","i18nextBrowserLanguageDetector"],function(i18next,Backend,Cache,PostProcessor,LanguageDetector){i18next.use(Backend).use(Cache).use(PostProcessor).use(LanguageDetector).init(i18nOptions,function(error,t){$18Next.init(i18next,$,{tName:"t",i18nName:"i18n",handleName:"localize",selectorAttr:"data-i18n",targetAttr:"i18n-target",optionsAttr:"i18n-options",useOptionsAttr:false,parseDefaultValueFromContent:true});if(i18next.options.resources&&i18next.options.preload){var _preload_1=i18next.options.preload;var _resources_1=i18next.options.resources;delete i18next.options.resources;delete i18next.options.preload;i18next.loadLanguages(_preload_1,function(){i18next.options.resources=_resources_1;i18next.options.preload=_preload_1;CDP.i18n=i18next;resolve()})}else{CDP.i18n=i18next;resolve()}})})})})}CDP.initializeI18N=initializeI18N;function getLocaleFallbackResource(path){var json;$.ajax({url:toUrl(path),method:"GET",async:false,dataType:"json",success:function(data){json=data},error:function(xhr,status){console.log(TAG+"ajax request failed. status: "+status)}});return json}function toUrl(path){if(!path&&"/"!==path[0]){console.error(TAG+"invalid path. path: "+path)}else{return CDP.webRoot+path.slice(1)}}})(CDP||(CDP={}));return CDP});
//# sourceMappingURL=cdp.i18n.min.js.map