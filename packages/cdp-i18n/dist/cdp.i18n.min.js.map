{"version":3,"sources":["dist/cdp.i18n.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","CDP","apply","undefined","jQuery","RESULT_CODE_BASE","_MODULE_RESULT_CODE_RANGE_CDP","LOCAL_CODE_BASE","RESULT_CODE","DECLARE_ERROR_CODE","CDP_I18N","I18N","Promise","TAG","initializeI18N","settings","resolve","reject","i18nSettings","options","i18nOptions_1","resources","lng","ns","getLocaleFallbackResource","fallbackResources","then","__WEBPACK_AMD_REQUIRE_ARRAY__","$18Next","i18next","Backend","Cache","PostProcessor","LanguageDetector","use","init","error","t","tName","i18nName","handleName","selectorAttr","targetAttr","optionsAttr","useOptionsAttr","parseDefaultValueFromContent","preload","_preload_1","_resources_1","loadLanguages","i18n","catch","oe","e","path","json","ajax","url","toUrl","method","async","dataType","success","data","xhr","status","makeErrorInfo","ERROR_CDP_I18N_INITIALIZE_FAILED","global","jqueryI18next","_extends","assign","target","arguments","length","source","key","defaults","parse","ele","opts","attr","indexOf","parts","split","substr","extendDefault","val","defaultValue","html","text","prepend","append","dataAttr","translated","localize","targetSelector","find","keys","each","k","trim","clone","handle","elements","bind","fn","index","_typeof","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","value","writable","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","next","done","push","err","Array","isArray","toConsumableArray","arr2","from","consoleLogger","type","log","args","output","warn","_console","console","Logger","concreteLogger","prefix","logger","debug","setDebug","bool","_len","_key","forward","_len2","_key2","_len3","_key3","deprecate","_len4","_key4","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","on","events","listener","_this","forEach","event","off","_this2","splice","emit","cloned","concat","observer","_cloned","_ref","makeString","copy","a","getLastOfPath","Empty","cleanKey","replace","canNotTraverseDeeper","stack","shift","setPath","newValue","_getLastOfPath","pushPath","_getLastOfPath2","getPath","_getLastOfPath3","deepExtend","overwrite","prop","String","regexEscape","str","_entityMap","&","<",">","\"","'","/","escape","ResourceStore","_EventEmitter","defaultNS","addNamespaces","removeNamespaces","getResource","keySeparator","addResource","silent","addResources","addResourceBundle","deep","pack","removeResourceBundle","hasResourceBundle","getResourceBundle","compatibilityAPI","toJSON","postProcessor","processors","addPostProcessor","translator","processor","process","Translator","services","changeLanguage","language","exists","interpolation","resolved","res","extractFromKey","nsSeparator","namespaces","join","translate","overloadTranslationOptionHandler","_extractFromKey","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","resType","toString","noObject","joinArrays","returnObjects","returnedObjectHandler","copy$$1","extendTranslation","usedDefault","_usedKey","isValidLookup","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","saveMissing","missingKeyHandler","backendConnector","appendNamespaceToMissingKey","parseMissingKeyHandler","interpolator","defaultVariables","interpolate","nest","reset","postProcess","postProcessorNames","applyPostProcessor","_this3","found","extracted","fallbackNS","needsPluralHandling","count","needsContextHandling","context","codes","code","finalKey","finalKeys","pluralSuffix","pluralResolver","getSuffix","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","capitalize","string","charAt","toUpperCase","slice","LanguageUtil","whitelist","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","specialCases","lowerCaseLng","map","part","cleanCode","isWhitelisted","load","nonExplicitWhitelist","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","1","_","Number","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","createRules","rules","set$$1","numbers","plurals","PluralResolver","addRule","getRule","needsPlural","rule","idx","noAbs","Math","abs","suffix","simplifyPluralSuffix","returnSuffix","compatibilityJSON","Interpolator","format","escapeValue","iOpts","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","maxReplaces","resetRegExp","regexpStr","regexp","RegExp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","nestingRegexp","match","replaces","regexSafe","handleFormat","f","exec","lastIndex","clonedOptions","handleHasOptions","optionsString","JSON","remove","what","Connector","backend","store","state","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","loaded","errors","_name$split","_name$split2","q","filter","read","fcName","tried","_this4","wait","setTimeout","_this5","allowMultiLoading","readMulti","_name$split3","_name$split4","bundle","loadOne","reload","_this6","_this7","_name$split5","_name$split6","fallbackValue","Connector$1","cache","loadLngs","enabled","save","get$1","initImmediate","pluralSeparator","_format","transformOptions","noop","I18n","external","isInitialized","isClone","_ret","createClassOnDemand","ClassOrObject","lu","cacheConnector","languageDetector","detection","storeApi","_store","loadResources","reloadResources","setLng","cacheUserLanguage","detect","getFixedT","fixedT","_translator","_translator2","setDefaultNamespace","loadNamespaces","preloaded","newLngs","dir","rtlLngs","createInstance","cloneInstance","mergedOptions","membersToCopy","i18nextXHRBackend","addQueryString","params","queryString","encodeURIComponent","paramName","Date","queryStringParams","x","XMLHttpRequest","ActiveXObject","open","crossDomain","setRequestHeader","withCredentials","overrideMimeType","h","customHeaders","onreadystatechange","readyState","responseText","send","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_classCallCheck","getDefaults","loadPath","addPath","loadUrl","ret","payload","i18nextLocalStorageCache","debounce","func","immediate","timeout","later","callNow","clearTimeout","storage","setItem","window","localStorage","getItem","expirationTime","versions","debouncedStore","nowMS","getTime","todo","local","i18nStamp","i18nVersion","storeParam","stringify","i18nextSprintfPostProcessor","babelHelpers","typeof","re","not_string","number","not_json","modulo","placeholder","key_access","index_access","sign","sprintf","parse_tree","argv","cursor","tree_length","node_type","arg","pad","pad_character","pad_length","is_positive","get_type","Error","test","isNaN","fromCharCode","parseInt","toExponential","parseFloat","toFixed","toPrecision","substring","str_repeat","fmt","_fmt","arg_names","field_list","replacement_field","field_match","SyntaxError","vsprintf","_argv","variable","input","multiplier","values","i18nextBrowserLanguageDetector","createClass","cookie","minutes","domain","expires","date","setTime","toGMTString","document","nameEQ","ca","cookie$1","lookup","lookupCookie","cookieMinutes","cookieDomain","querystring","query","location","search","pos","lookupQuerystring","hasLocalStorageSupport","testKey","removeItem","lookupLocalStorage","navigator$1","navigator","userLanguage","htmlTag","documentElement","getAttribute","order","caches","excludeCacheFor","Browser","detectors","i18nOptions","addDetector","detector","detectionOrder","detected","detectorName","cleanedLng","cacheName"],"mappings":"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","sourcesContent":["﻿/*!\n * cdp.i18n.js 2.0.0\n *\n * Date: 2017-10-27T06:12:35.658Z\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n    if(typeof exports === 'object' && typeof module === 'object')\n        module.exports = factory(require(\"jquery\"), require(\"cdp.core\"), require(\"cdp.promise\"));\n    else if(typeof define === 'function' && define.amd)\n        define([\"jquery\", \"cdp.core\", \"cdp.promise\"], factory);\n    else if(typeof exports === 'object')\n        exports[\"CDP\"] = factory(require(\"jquery\"), require(\"cdp.core\"), require(\"cdp.promise\"));\n    else\n        root[\"CDP\"] = factory(root[\"jQuery\"], root[\"CDP\"], root[\"CDP\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/     // The module cache\n/******/     var installedModules = {};\n/******/\n/******/     // The require function\n/******/     function __webpack_require__(moduleId) {\n/******/\n/******/         // Check if module is in cache\n/******/         if(installedModules[moduleId]) {\n/******/             return installedModules[moduleId].exports;\n/******/         }\n/******/         // Create a new module (and put it into the cache)\n/******/         var module = installedModules[moduleId] = {\n/******/             i: moduleId,\n/******/             l: false,\n/******/             exports: {}\n/******/         };\n/******/\n/******/         // Execute the module function\n/******/         modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/         // Flag the module as loaded\n/******/         module.l = true;\n/******/\n/******/         // Return the exports of the module\n/******/         return module.exports;\n/******/     }\n/******/\n/******/\n/******/     // expose the modules object (__webpack_modules__)\n/******/     __webpack_require__.m = modules;\n/******/\n/******/     // expose the module cache\n/******/     __webpack_require__.c = installedModules;\n/******/\n/******/     // define getter function for harmony exports\n/******/     __webpack_require__.d = function(exports, name, getter) {\n/******/         if(!__webpack_require__.o(exports, name)) {\n/******/             Object.defineProperty(exports, name, {\n/******/                 configurable: false,\n/******/                 enumerable: true,\n/******/                 get: getter\n/******/             });\n/******/         }\n/******/     };\n/******/\n/******/     // getDefaultExport function for compatibility with non-harmony modules\n/******/     __webpack_require__.n = function(module) {\n/******/         var getter = module && module.__esModule ?\n/******/             function getDefault() { return module['default']; } :\n/******/             function getModuleExports() { return module; };\n/******/         __webpack_require__.d(getter, 'a', getter);\n/******/         return getter;\n/******/     };\n/******/\n/******/     // Object.prototype.hasOwnProperty.call\n/******/     __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/     // __webpack_public_path__\n/******/     __webpack_require__.p = \"\";\n/******/\n/******/     // Load entry module and return exports\n/******/     return __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) { !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(2), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function ($, CDP) { return factory($, CDP); }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); } else { factory(root.jQuery || root.$, root.CDP || (root.CDP = {})); } }(this, function ($, CDP) {\nvar CDP;\n(function (CDP) {\n    // @internal Error code offset definition of `cdp-i18n`.\n    var RESULT_CODE_BASE;\n    (function (RESULT_CODE_BASE) {\n        RESULT_CODE_BASE[RESULT_CODE_BASE[\"CDP_I18N_DECLARERATION\"] = 0] = \"CDP_I18N_DECLARERATION\";\n        RESULT_CODE_BASE[RESULT_CODE_BASE[\"CDP_I18N\"] = 3 * CDP._MODULE_RESULT_CODE_RANGE_CDP] = \"CDP_I18N\";\n    })(RESULT_CODE_BASE = CDP.RESULT_CODE_BASE || (CDP.RESULT_CODE_BASE = {}));\n    ///////////////////////////////////////////////////////////////////////\n    // module error declaration:\n    // @internal cdp.i18n 内のローカルコードオフセット値\n    var LOCAL_CODE_BASE;\n    (function (LOCAL_CODE_BASE) {\n        LOCAL_CODE_BASE[LOCAL_CODE_BASE[\"I18N\"] = 0] = \"I18N\";\n    })(LOCAL_CODE_BASE || (LOCAL_CODE_BASE = {}));\n    /* tslint:disable:max-line-length */\n    // Error code definition of `cdp-i18n`.\n    var RESULT_CODE;\n    (function (RESULT_CODE) {\n        RESULT_CODE[RESULT_CODE[\"ERROR_CDP_I18N_DECLARATION\"] = 0] = \"ERROR_CDP_I18N_DECLARATION\";\n        /** `en` [[CDP.initializeI18N]]() failer code. <br> `ja` [[CDP.initializeI18N]]() のエラーコード */\n        RESULT_CODE[RESULT_CODE[\"ERROR_CDP_I18N_INITIALIZE_FAILED\"] = CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_I18N, LOCAL_CODE_BASE.I18N + 1, \"i18n initialize failed.\")] = \"ERROR_CDP_I18N_INITIALIZE_FAILED\";\n    })(RESULT_CODE = CDP.RESULT_CODE || (CDP.RESULT_CODE = {}));\n    /* tslint:enable:max-line-length */\n})(CDP || (CDP = {}));\n\n/* tslint:disable:max-line-length */\nvar CDP;\n(function (CDP) {\n    var Promise = CDP.Promise;\n    var TAG = \"[CDP.i18n] \";\n    /**\n     * @en initialize i18next. <br>\n     *     It'll be usually called from framework.\n     * @ja i18next の初期化 <br>\n     *     通常は Framework が呼び出す。\n     */\n    function initializeI18N(settings) {\n        return new Promise(function (resolve, reject) {\n            var i18nSettings = settings || {};\n            i18nSettings.options = i18nSettings.options || {};\n            try {\n                var i18nOptions_1 = (function (resources) {\n                    if (resources) {\n                        for (var lng in resources) {\n                            if (resources.hasOwnProperty(lng)) {\n                                for (var ns in resources[lng]) {\n                                    if (resources[lng].hasOwnProperty(ns)) {\n                                        resources[lng][ns] = getLocaleFallbackResource(resources[lng][ns]);\n                                    }\n                                }\n                            }\n                        }\n                        i18nSettings.options.resources = resources;\n                        return i18nSettings.options;\n                    }\n                    else {\n                        return i18nSettings.options;\n                    }\n                })(i18nSettings.fallbackResources);\n                new Promise(function(resolve) { resolve(); }).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(4)]; (function ($18Next) {\n                    new Promise(function(resolve) { resolve(); }).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [\n                        __webpack_require__(5),\n                        __webpack_require__(6),\n                        __webpack_require__(7),\n                        __webpack_require__(8),\n                        __webpack_require__(9),\n                    ]; (function (i18next, Backend, Cache, PostProcessor, LanguageDetector) {\n                        i18next\n                            .use(Backend)\n                            .use(Cache)\n                            .use(PostProcessor)\n                            .use(LanguageDetector)\n                            .init(i18nOptions_1, function (error, t) {\n                            $18Next.init(i18next, $, {\n                                tName: \"t\",\n                                i18nName: \"i18n\",\n                                handleName: \"localize\",\n                                selectorAttr: \"data-i18n\",\n                                targetAttr: \"i18n-target\",\n                                optionsAttr: \"i18n-options\",\n                                useOptionsAttr: false,\n                                parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text\n                            });\n                            // i18next 3.4.1: resources が指定されると preload が読み込まれないため、再読み込み処理を行う.\n                            if (i18next.options.resources && i18next.options.preload) {\n                                // options からプロパティを一旦削除.\n                                var _preload_1 = i18next.options.preload;\n                                var _resources_1 = i18next.options.resources;\n                                delete i18next.options.resources;\n                                delete i18next.options.preload;\n                                i18next.loadLanguages(_preload_1, function () {\n                                    // options を元に戻す\n                                    i18next.options.resources = _resources_1;\n                                    i18next.options.preload = _preload_1;\n                                    CDP.i18n = i18next;\n                                    resolve();\n                                });\n                            }\n                            else {\n                                CDP.i18n = i18next;\n                                resolve();\n                            }\n                        });\n                    }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n                }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(__webpack_require__.oe);\n            }\n            catch (e) {\n                return reject(e);\n            }\n        });\n    }\n    CDP.initializeI18N = initializeI18N;\n    /**\n     * @es get string resource for fallback.\n     * @js Fallback 用ローカライズリソースの取得\n     *\n     * @internal\n     * @returns\n     *   - `en` fallback resource object\n     *   - `ja` fallback リソースオブジェクト\n     */\n    function getLocaleFallbackResource(path) {\n        var json;\n        var error;\n        $.ajax({\n            url: CDP.toUrl(path),\n            method: \"GET\",\n            async: false,\n            dataType: \"json\",\n            success: function (data) {\n                json = data;\n            },\n            error: function (xhr, status) {\n                error = CDP.makeErrorInfo(CDP.RESULT_CODE.ERROR_CDP_I18N_INITIALIZE_FAILED, TAG, \"ajax request failed. status: \" + status);\n            }\n        });\n        if (null != error) {\n            throw error;\n        }\n        return json;\n    }\n})(CDP || (CDP = {}));\n\nreturn CDP; }));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.jqueryI18next = factory());\n}(this, (function () { 'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar defaults = {\n  tName: 't',\n  i18nName: 'i18n',\n  handleName: 'localize',\n  selectorAttr: 'data-i18n',\n  targetAttr: 'i18n-target',\n  optionsAttr: 'i18n-options',\n  useOptionsAttr: false,\n  parseDefaultValueFromContent: true\n};\n\nfunction init(i18next, $) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n  options = _extends({}, defaults, options);\n\n  function parse(ele, key, opts) {\n    if (key.length === 0) return;\n\n    var attr = 'text';\n\n    if (key.indexOf('[') === 0) {\n      var parts = key.split(']');\n      key = parts[1];\n      attr = parts[0].substr(1, parts[0].length - 1);\n    }\n\n    if (key.indexOf(';') === key.length - 1) {\n      key = key.substr(0, key.length - 2);\n    }\n\n    function extendDefault(o, val) {\n      if (!options.parseDefaultValueFromContent) return o;\n      return _extends({}, o, { defaultValue: val });\n    }\n\n    if (attr === 'html') {\n      ele.html(i18next.t(key, extendDefault(opts, ele.html())));\n    } else if (attr === 'text') {\n      ele.text(i18next.t(key, extendDefault(opts, ele.text())));\n    } else if (attr === 'prepend') {\n      ele.prepend(i18next.t(key, extendDefault(opts, ele.html())));\n    } else if (attr === 'append') {\n      ele.append(i18next.t(key, extendDefault(opts, ele.html())));\n    } else if (attr.indexOf('data-') === 0) {\n      var dataAttr = attr.substr('data-'.length);\n      var translated = i18next.t(key, extendDefault(opts, ele.data(dataAttr)));\n\n      // we change into the data cache\n      ele.data(dataAttr, translated);\n      // we change into the dom\n      ele.attr(attr, translated);\n    } else {\n      ele.attr(attr, i18next.t(key, extendDefault(opts, ele.attr(attr))));\n    }\n  }\n\n  function localize(ele, opts) {\n    var key = ele.attr(options.selectorAttr);\n    if (!key && typeof key !== 'undefined' && key !== false) key = ele.text() || ele.val();\n    if (!key) return;\n\n    var target = ele,\n        targetSelector = ele.data(options.targetAttr);\n\n    if (targetSelector) target = ele.find(targetSelector) || ele;\n\n    if (!opts && options.useOptionsAttr === true) opts = ele.data(options.optionsAttr);\n\n    opts = opts || {};\n\n    if (key.indexOf(';') >= 0) {\n      var keys = key.split(';');\n\n      $.each(keys, function (m, k) {\n        // .trim(): Trim the comma-separated parameters on the data-i18n attribute.\n        if (k !== '') parse(target, k.trim(), opts);\n      });\n    } else {\n      parse(target, key, opts);\n    }\n\n    if (options.useOptionsAttr === true) {\n      var clone = {};\n      clone = _extends({ clone: clone }, opts);\n\n      delete clone.lng;\n      ele.data(options.optionsAttr, clone);\n    }\n  }\n\n  function handle(opts) {\n    return this.each(function () {\n      // localize element itself\n      localize($(this), opts);\n\n      // localize children\n      var elements = $(this).find('[' + options.selectorAttr + ']');\n      elements.each(function () {\n        localize($(this), opts);\n      });\n    });\n  };\n\n  // $.t $.i18n shortcut\n  $[options.tName] = i18next.t.bind(i18next);\n  $[options.i18nName] = i18next;\n\n  // selector function $(mySelector).localize(opts);\n  $.fn[options.handleName] = handle;\n}\n\nvar index = {\n  init: init\n};\n\nreturn index;\n\n})));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.i18next = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar consoleLogger = {\n  type: 'logger',\n\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    var _console;\n\n    /* eslint no-console: 0 */\n    if (console && console[type]) (_console = console)[type].apply(_console, toConsumableArray(args));\n  }\n};\n\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  Logger.prototype.init = function init(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  };\n\n  Logger.prototype.setDebug = function setDebug(bool) {\n    this.debug = bool;\n  };\n\n  Logger.prototype.log = function log() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return this.forward(args, 'log', '', true);\n  };\n\n  Logger.prototype.warn = function warn() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return this.forward(args, 'warn', '', true);\n  };\n\n  Logger.prototype.error = function error() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return this.forward(args, 'error', '');\n  };\n\n  Logger.prototype.deprecate = function deprecate() {\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  };\n\n  Logger.prototype.forward = function forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = '' + prefix + this.prefix + ' ' + args[0];\n    return this.logger[lvl](args);\n  };\n\n  Logger.prototype.create = function create(moduleName) {\n    return new Logger(this.logger, _extends({ prefix: this.prefix + ':' + moduleName + ':' }, this.options));\n  };\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  EventEmitter.prototype.on = function on(events, listener) {\n    var _this = this;\n\n    events.split(' ').forEach(function (event) {\n      _this.observers[event] = _this.observers[event] || [];\n      _this.observers[event].push(listener);\n    });\n  };\n\n  EventEmitter.prototype.off = function off(event, listener) {\n    var _this2 = this;\n\n    if (!this.observers[event]) {\n      return;\n    }\n\n    this.observers[event].forEach(function () {\n      if (!listener) {\n        delete _this2.observers[event];\n      } else {\n        var index = _this2.observers[event].indexOf(listener);\n        if (index > -1) {\n          _this2.observers[event].splice(index, 1);\n        }\n      }\n    });\n  };\n\n  EventEmitter.prototype.emit = function emit(event) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (this.observers[event]) {\n      var cloned = [].concat(this.observers[event]);\n      cloned.forEach(function (observer) {\n        observer.apply(undefined, args);\n      });\n    }\n\n    if (this.observers['*']) {\n      var _cloned = [].concat(this.observers['*']);\n      _cloned.forEach(function (observer) {\n        var _ref;\n\n        observer.apply(observer, (_ref = [event]).concat.apply(_ref, args));\n      });\n    }\n  };\n\n  return EventEmitter;\n}();\n\nfunction makeString(object) {\n  if (object == null) return '';\n  /* eslint prefer-template: 0 */\n  return '' + object;\n}\n\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    object = object[key];\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\n\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\n\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\n\nfunction deepExtend(target, source, overwrite) {\n  /* eslint no-restricted-syntax: 0 */\n  for (var prop in source) {\n    if (prop in target) {\n      // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch\n      if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n        if (overwrite) target[prop] = source[prop];\n      } else {\n        deepExtend(target[prop], source[prop], overwrite);\n      }\n    } else {\n      target[prop] = source[prop];\n    }\n  }\n  return target;\n}\n\nfunction regexEscape(str) {\n  /* eslint no-useless-escape: 0 */\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n\n/* eslint-disable */\nvar _entityMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  \"/\": '&#x2F;'\n};\n/* eslint-enable */\n\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\n\nvar ResourceStore = function (_EventEmitter) {\n  inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { ns: ['translation'], defaultNS: 'translation' };\n    classCallCheck(this, ResourceStore);\n\n    var _this = possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.data = data || {};\n    _this.options = options;\n    return _this;\n  }\n\n  ResourceStore.prototype.addNamespaces = function addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  };\n\n  ResourceStore.prototype.removeNamespaces = function removeNamespaces(ns) {\n    var index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  };\n\n  ResourceStore.prototype.getResource = function getResource(lng, ns, key) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    var keySeparator = options.keySeparator || this.options.keySeparator;\n    if (keySeparator === undefined) keySeparator = '.';\n\n    var path = [lng, ns];\n    if (key && typeof key !== 'string') path = path.concat(key);\n    if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    }\n\n    return getPath(this.data, path);\n  };\n\n  ResourceStore.prototype.addResource = function addResource(lng, ns, key, value) {\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : { silent: false };\n\n    var keySeparator = this.options.keySeparator;\n    if (keySeparator === undefined) keySeparator = '.';\n\n    var path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    setPath(this.data, path, value);\n\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  };\n\n  ResourceStore.prototype.addResources = function addResources(lng, ns, resources) {\n    /* eslint no-restricted-syntax: 0 */\n    for (var m in resources) {\n      if (typeof resources[m] === 'string') this.addResource(lng, ns, m, resources[m], { silent: true });\n    }\n    this.emit('added', lng, ns, resources);\n  };\n\n  ResourceStore.prototype.addResourceBundle = function addResourceBundle(lng, ns, resources, deep, overwrite) {\n    var path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    var pack = getPath(this.data, path) || {};\n\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = _extends({}, pack, resources);\n    }\n\n    setPath(this.data, path, pack);\n\n    this.emit('added', lng, ns, resources);\n  };\n\n  ResourceStore.prototype.removeResourceBundle = function removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n\n    this.emit('removed', lng, ns);\n  };\n\n  ResourceStore.prototype.hasResourceBundle = function hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  };\n\n  ResourceStore.prototype.getResourceBundle = function getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n\n    // COMPATIBILITY: remove extend in v2.1.0\n    if (this.options.compatibilityAPI === 'v1') return _extends({}, this.getResource(lng, ns));\n\n    return this.getResource(lng, ns);\n  };\n\n  ResourceStore.prototype.toJSON = function toJSON() {\n    return this.data;\n  };\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n\n  processors: {},\n\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n\n    return value;\n  }\n};\n\nvar Translator = function (_EventEmitter) {\n  inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Translator);\n\n    var _this = possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector'], services, _this);\n\n    _this.options = options;\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  Translator.prototype.changeLanguage = function changeLanguage(lng) {\n    if (lng) this.language = lng;\n  };\n\n  Translator.prototype.exists = function exists(key) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { interpolation: {} };\n\n    var resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  };\n\n  Translator.prototype.extractFromKey = function extractFromKey(key, options) {\n    var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    var keySeparator = options.keySeparator || this.options.keySeparator || '.';\n\n    var namespaces = options.ns || this.options.defaultNS;\n    if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n      var parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    return {\n      key: key,\n      namespaces: namespaces\n    };\n  };\n\n  Translator.prototype.translate = function translate(keys) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      /* eslint prefer-rest-params: 0 */\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n\n    // non valid keys handling\n    if (keys === undefined || keys === null || keys === '') return '';\n    if (typeof keys === 'number') keys = String(keys);\n    if (typeof keys === 'string') keys = [keys];\n\n    // separators\n    var keySeparator = options.keySeparator || this.options.keySeparator || '.';\n\n    // get namespace(s)\n\n    var _extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n        key = _extractFromKey.key,\n        namespaces = _extractFromKey.namespaces;\n\n    var namespace = namespaces[namespaces.length - 1];\n\n    // return key on CIMode\n    var lng = options.lng || this.language;\n    var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        return namespace + nsSeparator + key;\n      }\n\n      return key;\n    }\n\n    // resolve from store\n    var resolved = this.resolve(keys, options);\n    var res = resolved && resolved.res;\n    var usedKey = resolved && resolved.usedKey || key;\n\n    var resType = Object.prototype.toString.apply(res);\n    var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n\n    // object\n    if (res && typeof res !== 'string' && noObject.indexOf(resType) < 0 && !(joinArrays && resType === '[object Array]')) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(usedKey, res, options) : 'key \\'' + key + ' (' + this.language + ')\\' returned an object instead of string.';\n      }\n\n      // if we got a separator we loop over children - else we just return object as is\n      // as having it set to false means no hierarchy so no lookup for nested values\n      if (options.keySeparator || this.options.keySeparator) {\n        var copy$$1 = resType === '[object Array]' ? [] : {}; // apply child translation on a copy\n\n        /* eslint no-restricted-syntax: 0 */\n        for (var m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            copy$$1[m] = this.translate('' + usedKey + keySeparator + m, _extends({}, options, { joinArrays: false, ns: namespaces }));\n          }\n        }\n        res = copy$$1;\n      }\n    } else if (joinArrays && resType === '[object Array]') {\n      // array special treatment\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options);\n    } else {\n      // string, empty or null\n      var usedDefault = false;\n      var _usedKey = false;\n\n      // fallback value\n      if (!this.isValidLookup(res) && options.defaultValue !== undefined) {\n        usedDefault = true;\n        res = options.defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        _usedKey = true;\n        res = key;\n      }\n\n      // save missing\n      if (_usedKey || usedDefault) {\n        this.logger.log('missingKey', lng, namespace, key, res);\n\n        var lngs = [];\n        var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (var i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n\n        if (this.options.saveMissing) {\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(lngs, namespace, key, res);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(lngs, namespace, key, res);\n          }\n        }\n\n        this.emit('missingKey', lngs, namespace, key, res);\n      }\n\n      // extend\n      res = this.extendTranslation(res, keys, options);\n\n      // append namespace if still key\n      if (_usedKey && res === key && this.options.appendNamespaceToMissingKey) res = namespace + ':' + key;\n\n      // parseMissingKeyHandler\n      if (_usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n    }\n\n    // return\n    return res;\n  };\n\n  Translator.prototype.extendTranslation = function extendTranslation(res, key, options) {\n    var _this2 = this;\n\n    if (options.interpolation) this.interpolator.init(_extends({}, options, { interpolation: _extends({}, this.options.interpolation, options.interpolation) }));\n\n    // interpolate\n    var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n    if (this.options.interpolation.defaultVariables) data = _extends({}, this.options.interpolation.defaultVariables, data);\n    res = this.interpolator.interpolate(res, data, options.lng || this.language);\n\n    // nesting\n    if (options.nest !== false) res = this.interpolator.nest(res, function () {\n      return _this2.translate.apply(_this2, arguments);\n    }, options);\n\n    if (options.interpolation) this.interpolator.reset();\n\n    // post process\n    var postProcess = options.postProcess || this.options.postProcess;\n    var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n    if (res !== undefined && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, options, this);\n    }\n\n    return res;\n  };\n\n  Translator.prototype.resolve = function resolve(keys) {\n    var _this3 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var found = void 0;\n    var usedKey = void 0;\n\n    if (typeof keys === 'string') keys = [keys];\n\n    // forEach possible key\n    keys.forEach(function (k) {\n      if (_this3.isValidLookup(found)) return;\n      var extracted = _this3.extractFromKey(k, options);\n      var key = extracted.key;\n      usedKey = key;\n      var namespaces = extracted.namespaces;\n      if (_this3.options.fallbackNS) namespaces = namespaces.concat(_this3.options.fallbackNS);\n\n      var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';\n\n      var codes = options.lngs ? options.lngs : _this3.languageUtils.toResolveHierarchy(options.lng || _this3.language);\n\n      namespaces.forEach(function (ns) {\n        if (_this3.isValidLookup(found)) return;\n\n        codes.forEach(function (code) {\n          if (_this3.isValidLookup(found)) return;\n\n          var finalKey = key;\n          var finalKeys = [finalKey];\n\n          var pluralSuffix = void 0;\n          if (needsPluralHandling) pluralSuffix = _this3.pluralResolver.getSuffix(code, options.count);\n\n          // fallback for plural if context not found\n          if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);\n\n          // get key for context if needed\n          if (needsContextHandling) finalKeys.push(finalKey += '' + _this3.options.contextSeparator + options.context);\n\n          // get key for plural if needed\n          if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n\n          // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only\n          var possibleKey = void 0;\n          /* eslint no-cond-assign: 0 */\n          while (possibleKey = finalKeys.pop()) {\n            if (!_this3.isValidLookup(found)) {\n              found = _this3.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n\n    return { res: found, usedKey: usedKey };\n  };\n\n  Translator.prototype.isValidLookup = function isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  };\n\n  Translator.prototype.getResource = function getResource(code, ns, key) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    return this.resourceStore.getResource(code, ns, key, options);\n  };\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n\n    this.whitelist = this.options.whitelist || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  LanguageUtil.prototype.getScriptPartFromCode = function getScriptPartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return null;\n\n    var p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    return this.formatLanguageCode(p.join('-'));\n  };\n\n  LanguageUtil.prototype.getLanguagePartFromCode = function getLanguagePartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return code;\n\n    var p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  };\n\n  LanguageUtil.prototype.formatLanguageCode = function formatLanguageCode(code) {\n    // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      var p = code.split('-');\n\n      if (this.options.lowerCaseLng) {\n        p = p.map(function (part) {\n          return part.toLowerCase();\n        });\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n\n        // if lenght 2 guess it's a country\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n\n      return p.join('-');\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  };\n\n  LanguageUtil.prototype.isWhitelisted = function isWhitelisted(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitWhitelist) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(code) > -1;\n  };\n\n  LanguageUtil.prototype.getFallbackCodes = function getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n\n    if (!code) return fallbacks.default || [];\n\n    // asume we have an object defining fallbacks\n    var found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks.default;\n\n    return found || [];\n  };\n\n  LanguageUtil.prototype.toResolveHierarchy = function toResolveHierarchy(code, fallbackCode) {\n    var _this = this;\n\n    var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n\n    var codes = [];\n    var addCode = function addCode(c) {\n      if (!c) return;\n      if (_this.isWhitelisted(c)) {\n        codes.push(c);\n      } else {\n        _this.logger.warn('rejecting non-whitelisted language code: ' + c);\n      }\n    };\n\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach(function (fc) {\n      if (codes.indexOf(fc) < 0) addCode(_this.formatLanguageCode(fc));\n    });\n\n    return codes;\n  };\n\n  return LanguageUtil;\n}();\n\n// definition http://translate.sourceforge.net/wiki/l10n/pluralforms\n/* eslint-disable */\nvar sets = [{ lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'ti', 'tr', 'uz', 'wa'], nr: [1, 2], fc: 1 }, { lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'he', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'], nr: [1, 2], fc: 2 }, { lngs: ['ay', 'bo', 'cgg', 'fa', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'], nr: [1], fc: 3 }, { lngs: ['be', 'bs', 'dz', 'hr', 'ru', 'sr', 'uk'], nr: [1, 2, 5], fc: 4 }, { lngs: ['ar'], nr: [0, 1, 2, 3, 11, 100], fc: 5 }, { lngs: ['cs', 'sk'], nr: [1, 2, 5], fc: 6 }, { lngs: ['csb', 'pl'], nr: [1, 2, 5], fc: 7 }, { lngs: ['cy'], nr: [1, 2, 3, 8], fc: 8 }, { lngs: ['fr'], nr: [1, 2], fc: 9 }, { lngs: ['ga'], nr: [1, 2, 3, 7, 11], fc: 10 }, { lngs: ['gd'], nr: [1, 2, 3, 20], fc: 11 }, { lngs: ['is'], nr: [1, 2], fc: 12 }, { lngs: ['jv'], nr: [0, 1], fc: 13 }, { lngs: ['kw'], nr: [1, 2, 3, 4], fc: 14 }, { lngs: ['lt'], nr: [1, 2, 10], fc: 15 }, { lngs: ['lv'], nr: [1, 2, 0], fc: 16 }, { lngs: ['mk'], nr: [1, 2], fc: 17 }, { lngs: ['mnk'], nr: [0, 1, 2], fc: 18 }, { lngs: ['mt'], nr: [1, 2, 11, 20], fc: 19 }, { lngs: ['or'], nr: [2, 1], fc: 2 }, { lngs: ['ro'], nr: [1, 2, 20], fc: 20 }, { lngs: ['sl'], nr: [5, 1, 2, 3], fc: 21 }];\n\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n === 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  }\n};\n/* eslint-enable */\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set$$1) {\n    set$$1.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set$$1.nr,\n        plurals: _rulesPluralsTypes[set$$1.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n\n    this.logger = baseLogger.create('pluralResolver');\n\n    this.rules = createRules();\n  }\n\n  PluralResolver.prototype.addRule = function addRule(lng, obj) {\n    this.rules[lng] = obj;\n  };\n\n  PluralResolver.prototype.getRule = function getRule(code) {\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  };\n\n  PluralResolver.prototype.needsPlural = function needsPlural(code) {\n    var rule = this.getRule(code);\n\n    return rule && rule.numbers.length > 1;\n  };\n\n  PluralResolver.prototype.getSuffix = function getSuffix(code, count) {\n    var _this = this;\n\n    var rule = this.getRule(code);\n\n    if (rule) {\n      //if (rule.numbers.length === 1) return ''; // only singular\n\n      var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n      var suffix = rule.numbers[idx];\n\n      // special treatment for lngs only having singular and plural\n      if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        if (suffix === 2) {\n          suffix = 'plural';\n        } else if (suffix === 1) {\n          suffix = '';\n        }\n      }\n\n      var returnSuffix = function returnSuffix() {\n        return _this.options.prepend && suffix.toString() ? _this.options.prepend + suffix.toString() : suffix.toString();\n      };\n\n      // COMPATIBILITY JSON\n      // v1\n      if (this.options.compatibilityJSON === 'v1') {\n        if (suffix === 1) return '';\n        if (typeof suffix === 'number') return '_plural_' + suffix.toString();\n        return returnSuffix();\n      } else if ( /* v2 */this.options.compatibilityJSON === 'v2' || rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        return returnSuffix();\n      } else if ( /* v3 - gettext index */rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        return returnSuffix();\n      }\n      return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n    }\n\n    this.logger.warn('no plural rule found for: ' + code);\n    return '';\n  };\n\n  return PluralResolver;\n}();\n\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n\n    this.init(options, true);\n  }\n\n  /* eslint no-param-reassign: 0 */\n\n\n  Interpolator.prototype.init = function init() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var reset = arguments[1];\n\n    if (reset) {\n      this.options = options;\n      this.format = options.interpolation && options.interpolation.format || function (value) {\n        return value;\n      };\n      this.escape = options.interpolation && options.interpolation.escape || escape;\n    }\n    if (!options.interpolation) options.interpolation = { escapeValue: true };\n\n    var iOpts = options.interpolation;\n\n    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n\n    this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n    this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n\n    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n\n    this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n\n    this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n\n    // the regexp\n    this.resetRegExp();\n  };\n\n  Interpolator.prototype.reset = function reset() {\n    if (this.options) this.init(this.options);\n  };\n\n  Interpolator.prototype.resetRegExp = function resetRegExp() {\n    // the regexp\n    var regexpStr = this.prefix + '(.+?)' + this.suffix;\n    this.regexp = new RegExp(regexpStr, 'g');\n\n    var regexpUnescapeStr = '' + this.prefix + this.unescapePrefix + '(.+?)' + this.unescapeSuffix + this.suffix;\n    this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n\n    var nestingRegexpStr = this.nestingPrefix + '(.+?)' + this.nestingSuffix;\n    this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n  };\n\n  Interpolator.prototype.interpolate = function interpolate(str, data, lng) {\n    var _this = this;\n\n    var match = void 0;\n    var value = void 0;\n    var replaces = void 0;\n\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n\n    var handleFormat = function handleFormat(key) {\n      if (key.indexOf(_this.formatSeparator) < 0) return getPath(data, key);\n\n      var p = key.split(_this.formatSeparator);\n      var k = p.shift().trim();\n      var f = p.join(_this.formatSeparator).trim();\n\n      return _this.format(getPath(data, k), f, lng);\n    };\n\n    this.resetRegExp();\n\n    replaces = 0;\n    // unescape if has unescapePrefix/Suffix\n    /* eslint no-cond-assign: 0 */\n    while (match = this.regexpUnescape.exec(str)) {\n      value = handleFormat(match[1].trim());\n      str = str.replace(match[0], value);\n      this.regexpUnescape.lastIndex = 0;\n      replaces++;\n      if (replaces >= this.maxReplaces) {\n        break;\n      }\n    }\n\n    replaces = 0;\n    // regular escape on demand\n    while (match = this.regexp.exec(str)) {\n      value = handleFormat(match[1].trim());\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn('missed to pass in variable ' + match[1] + ' for interpolating ' + str);\n        value = '';\n      }\n      value = this.escapeValue ? regexSafe(this.escape(value)) : regexSafe(value);\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n      replaces++;\n      if (replaces >= this.maxReplaces) {\n        break;\n      }\n    }\n    return str;\n  };\n\n  Interpolator.prototype.nest = function nest(str, fc) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var match = void 0;\n    var value = void 0;\n\n    var clonedOptions = _extends({}, options);\n    clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n\n    // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n    function handleHasOptions(key) {\n      if (key.indexOf(',') < 0) return key;\n\n      var p = key.split(',');\n      key = p.shift();\n      var optionsString = p.join(',');\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      optionsString = optionsString.replace(/'/g, '\"');\n\n      try {\n        clonedOptions = JSON.parse(optionsString);\n      } catch (e) {\n        this.logger.error('failed parsing options string in nesting for key ' + key, e);\n      }\n\n      return key;\n    }\n\n    // regular escape on demand\n    while (match = this.nestingRegexp.exec(str)) {\n      value = fc(handleHasOptions.call(this, match[1].trim()), clonedOptions);\n\n      // is only the nesting key (key1 = '$(key2)') return the value without stringify\n      if (value && match[0] === str && typeof value !== 'string') return value;\n\n      // no string to include or empty\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn('missed to resolve ' + match[1] + ' for nesting ' + str);\n        value = '';\n      }\n      // Nested keys should not be escaped by default #854\n      // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  };\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector = function (_EventEmitter) {\n  inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    classCallCheck(this, Connector);\n\n    var _this = possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n    return _this;\n  }\n\n  Connector.prototype.queueLoad = function queueLoad(languages, namespaces, callback) {\n    var _this2 = this;\n\n    // find what needs to be loaded\n    var toLoad = [];\n    var pending = [];\n    var toLoadLanguages = [];\n    var toLoadNamespaces = [];\n\n    languages.forEach(function (lng) {\n      var hasAllNamespaces = true;\n\n      namespaces.forEach(function (ns) {\n        var name = lng + '|' + ns;\n\n        if (_this2.store.hasResourceBundle(lng, ns)) {\n          _this2.state[name] = 2; // loaded\n        } else if (_this2.state[name] < 0) {\n          // nothing to do for err\n        } else if (_this2.state[name] === 1) {\n          if (pending.indexOf(name) < 0) pending.push(name);\n        } else {\n          _this2.state[name] = 1; // pending\n\n          hasAllNamespaces = false;\n\n          if (pending.indexOf(name) < 0) pending.push(name);\n          if (toLoad.indexOf(name) < 0) toLoad.push(name);\n          if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n        }\n      });\n\n      if (!hasAllNamespaces) toLoadLanguages.push(lng);\n    });\n\n    if (toLoad.length || pending.length) {\n      this.queue.push({\n        pending: pending,\n        loaded: {},\n        errors: [],\n        callback: callback\n      });\n    }\n\n    return {\n      toLoad: toLoad,\n      pending: pending,\n      toLoadLanguages: toLoadLanguages,\n      toLoadNamespaces: toLoadNamespaces\n    };\n  };\n\n  Connector.prototype.loaded = function loaded(name, err, data) {\n    var _this3 = this;\n\n    var _name$split = name.split('|'),\n        _name$split2 = slicedToArray(_name$split, 2),\n        lng = _name$split2[0],\n        ns = _name$split2[1];\n\n    if (err) this.emit('failedLoading', lng, ns, err);\n\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data);\n    }\n\n    // set loaded\n    this.state[name] = err ? -1 : 2;\n\n    // callback if ready\n    this.queue.forEach(function (q) {\n      pushPath(q.loaded, [lng], ns);\n      remove(q.pending, name);\n\n      if (err) q.errors.push(err);\n\n      if (q.pending.length === 0 && !q.done) {\n        _this3.emit('loaded', q.loaded);\n        /* eslint no-param-reassign: 0 */\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n\n    // remove done load requests\n    this.queue = this.queue.filter(function (q) {\n      return !q.done;\n    });\n  };\n\n  Connector.prototype.read = function read(lng, ns, fcName) {\n    var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    var _this4 = this;\n\n    var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 250;\n    var callback = arguments[5];\n\n    if (!lng.length) return callback(null, {}); // noting to load\n\n    return this.backend[fcName](lng, ns, function (err, data) {\n      if (err && data /* = retryFlag */ && tried < 5) {\n        setTimeout(function () {\n          _this4.read.call(_this4, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    });\n  };\n\n  /* eslint consistent-return: 0 */\n\n\n  Connector.prototype.load = function load(languages, namespaces, callback) {\n    var _this5 = this;\n\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    var options = _extends({}, this.backend.options, this.options.backend);\n\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    var toLoad = this.queueLoad(languages, namespaces, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now\n      return null; // pendings will trigger callback\n    }\n\n    // load with multi-load\n    if (options.allowMultiLoading && this.backend.readMulti) {\n      this.read(toLoad.toLoadLanguages, toLoad.toLoadNamespaces, 'readMulti', null, null, function (err, data) {\n        if (err) _this5.logger.warn('loading namespaces ' + toLoad.toLoadNamespaces.join(', ') + ' for languages ' + toLoad.toLoadLanguages.join(', ') + ' via multiloading failed', err);\n        if (!err && data) _this5.logger.log('successfully loaded namespaces ' + toLoad.toLoadNamespaces.join(', ') + ' for languages ' + toLoad.toLoadLanguages.join(', ') + ' via multiloading', data);\n\n        toLoad.toLoad.forEach(function (name) {\n          var _name$split3 = name.split('|'),\n              _name$split4 = slicedToArray(_name$split3, 2),\n              l = _name$split4[0],\n              n = _name$split4[1];\n\n          var bundle = getPath(data, [l, n]);\n          if (bundle) {\n            _this5.loaded(name, err, bundle);\n          } else {\n            var error = 'loading namespace ' + n + ' for language ' + l + ' via multiloading failed';\n            _this5.loaded(name, error);\n            _this5.logger.error(error);\n          }\n        });\n      });\n    } else {\n      toLoad.toLoad.forEach(function (name) {\n        _this5.loadOne(name);\n      });\n    }\n  };\n\n  Connector.prototype.reload = function reload(languages, namespaces) {\n    var _this6 = this;\n\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n    }\n    var options = _extends({}, this.backend.options, this.options.backend);\n\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    // load with multi-load\n    if (options.allowMultiLoading && this.backend.readMulti) {\n      this.read(languages, namespaces, 'readMulti', null, null, function (err, data) {\n        if (err) _this6.logger.warn('reloading namespaces ' + namespaces.join(', ') + ' for languages ' + languages.join(', ') + ' via multiloading failed', err);\n        if (!err && data) _this6.logger.log('successfully reloaded namespaces ' + namespaces.join(', ') + ' for languages ' + languages.join(', ') + ' via multiloading', data);\n\n        languages.forEach(function (l) {\n          namespaces.forEach(function (n) {\n            var bundle = getPath(data, [l, n]);\n            if (bundle) {\n              _this6.loaded(l + '|' + n, err, bundle);\n            } else {\n              var error = 'reloading namespace ' + n + ' for language ' + l + ' via multiloading failed';\n              _this6.loaded(l + '|' + n, error);\n              _this6.logger.error(error);\n            }\n          });\n        });\n      });\n    } else {\n      languages.forEach(function (l) {\n        namespaces.forEach(function (n) {\n          _this6.loadOne(l + '|' + n, 're');\n        });\n      });\n    }\n  };\n\n  Connector.prototype.loadOne = function loadOne(name) {\n    var _this7 = this;\n\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    var _name$split5 = name.split('|'),\n        _name$split6 = slicedToArray(_name$split5, 2),\n        lng = _name$split6[0],\n        ns = _name$split6[1];\n\n    this.read(lng, ns, 'read', null, null, function (err, data) {\n      if (err) _this7.logger.warn(prefix + 'loading namespace ' + ns + ' for language ' + lng + ' failed', err);\n      if (!err && data) _this7.logger.log(prefix + 'loaded namespace ' + ns + ' for language ' + lng, data);\n\n      _this7.loaded(name, err, data);\n    });\n  };\n\n  Connector.prototype.saveMissing = function saveMissing(languages, namespace, key, fallbackValue) {\n    if (this.backend && this.backend.create) this.backend.create(languages, namespace, key, fallbackValue);\n\n    // write to store to avoid resending\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  };\n\n  return Connector;\n}(EventEmitter);\n\nvar Connector$1 = function (_EventEmitter) {\n  inherits(Connector, _EventEmitter);\n\n  function Connector(cache, store, services) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    classCallCheck(this, Connector);\n\n    var _this = possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.cache = cache;\n    _this.store = store;\n    _this.services = services;\n    _this.options = options;\n    _this.logger = baseLogger.create('cacheConnector');\n\n    if (_this.cache && _this.cache.init) _this.cache.init(services, options.cache, options);\n    return _this;\n  }\n\n  /* eslint consistent-return: 0 */\n\n\n  Connector.prototype.load = function load(languages, namespaces, callback) {\n    var _this2 = this;\n\n    if (!this.cache) return callback && callback();\n    var options = _extends({}, this.cache.options, this.options.cache);\n\n    var loadLngs = typeof languages === 'string' ? this.services.languageUtils.toResolveHierarchy(languages) : languages;\n\n    if (options.enabled) {\n      this.cache.load(loadLngs, function (err, data) {\n        if (err) _this2.logger.error('loading languages ' + loadLngs.join(', ') + ' from cache failed', err);\n        if (data) {\n          /* eslint no-restricted-syntax: 0 */\n          for (var l in data) {\n            if (Object.prototype.hasOwnProperty.call(data, l)) {\n              for (var n in data[l]) {\n                if (Object.prototype.hasOwnProperty.call(data[l], n)) {\n                  if (n !== 'i18nStamp') {\n                    var bundle = data[l][n];\n                    if (bundle) _this2.store.addResourceBundle(l, n, bundle);\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (callback) callback();\n      });\n    } else if (callback) {\n      callback();\n    }\n  };\n\n  Connector.prototype.save = function save() {\n    if (this.cache && this.options.cache && this.options.cache.enabled) this.cache.save(this.store.data);\n  };\n\n  return Connector;\n}(EventEmitter);\n\nfunction get$1() {\n  return {\n    debug: false,\n    initImmediate: true,\n\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false, // string or array of namespaces\n\n    whitelist: false, // array with whitelisted languages\n    nonExplicitWhitelist: false,\n    load: 'all', // | currentOnly | languageOnly\n    preload: false, // array with preload languages\n\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n\n    saveMissing: false, // enable to send missing values\n    saveMissingTo: 'fallback', // 'current' || 'all'\n    missingKeyHandler: false, // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n\n    postProcess: false, // string or array of postProcessor names\n    returnNull: true, // allows null value as valid translation\n    returnEmptyString: true, // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false, // or string to join array\n    returnedObjectHandler: function returnedObjectHandler() {}, // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false, // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      return { defaultValue: args[1] };\n    },\n\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000 // max replaces to prevent endless loop\n    }\n  };\n}\n\n/* eslint no-param-reassign: 0 */\nfunction transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  // extend whitelist with cimode\n  if (options.whitelist && options.whitelist.indexOf('cimode') < 0) options.whitelist.push('cimode');\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n = function (_EventEmitter) {\n  inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments[1];\n    classCallCheck(this, I18n);\n\n    var _this = possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = { external: [] };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      var _ret;\n\n      // https://github.com/i18next/i18next/issues/879\n      if (!_this.options.initImmediate) return _ret = _this.init(options, callback), possibleConstructorReturn(_this, _ret);\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n    return _this;\n  }\n\n  I18n.prototype.init = function init() {\n    var _this2 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments[1];\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = _extends({}, get$1(), this.options, transformOptions(options));\n\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n\n    // init services\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n\n      var lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n\n      var s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.resourceStore.on('added removed', function (lng, ns) {\n        s.cacheConnector.save();\n      });\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, { prepend: this.options.pluralSeparator, compatibilityJSON: this.options.compatibilityJSON, simplifyPluralSuffix: this.options.simplifyPluralSuffix });\n      s.interpolator = new Interpolator(this.options);\n\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      // pipe events from backendConnector\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        _this2.emit.apply(_this2, [event].concat(args));\n      });\n\n      s.backendConnector.on('loaded', function (loaded) {\n        s.cacheConnector.save();\n      });\n\n      s.cacheConnector = new Connector$1(createClassOnDemand(this.modules.cache), s.resourceStore, s, this.options);\n      // pipe events from backendConnector\n      s.cacheConnector.on('*', function (event) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        _this2.emit.apply(_this2, [event].concat(args));\n      });\n\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        s.languageDetector.init(s, this.options.detection, this.options);\n      }\n\n      this.translator = new Translator(this.services, this.options);\n      // pipe events from translator\n      this.translator.on('*', function (event) {\n        for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n\n        _this2.emit.apply(_this2, [event].concat(args));\n      });\n\n      this.modules.external.forEach(function (m) {\n        if (m.init) m.init(_this2);\n      });\n    }\n\n    // append api\n    var storeApi = ['getResource', 'addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle', 'hasResourceBundle', 'getResourceBundle'];\n    storeApi.forEach(function (fcName) {\n      _this2[fcName] = function () {\n        var _store;\n\n        return (_store = _this2.store)[fcName].apply(_store, arguments);\n      };\n    });\n\n    var load = function load() {\n      _this2.changeLanguage(_this2.options.lng, function (err, t) {\n        _this2.isInitialized = true;\n        _this2.logger.log('initialized', _this2.options);\n        _this2.emit('initialized', _this2.options);\n\n        callback(err, t);\n      });\n    };\n\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n\n    return this;\n  };\n\n  /* eslint consistent-return: 0 */\n\n\n  I18n.prototype.loadResources = function loadResources() {\n    var _this3 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    if (!this.options.resources) {\n      if (this.language && this.language.toLowerCase() === 'cimode') return callback(); // avoid loading resources for cimode\n\n      var toLoad = [];\n\n      var append = function append(lng) {\n        if (!lng) return;\n        var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(function (l) {\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n\n      if (!this.language) {\n        // at least load fallbacks in this case\n        var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(function (l) {\n          return append(l);\n        });\n      } else {\n        append(this.language);\n      }\n\n      if (this.options.preload) {\n        this.options.preload.forEach(function (l) {\n          return append(l);\n        });\n      }\n\n      this.services.cacheConnector.load(toLoad, this.options.ns, function () {\n        _this3.services.backendConnector.load(toLoad, _this3.options.ns, callback);\n      });\n    } else {\n      callback(null);\n    }\n  };\n\n  I18n.prototype.reloadResources = function reloadResources(lngs, ns) {\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    this.services.backendConnector.reload(lngs, ns);\n  };\n\n  I18n.prototype.use = function use(module) {\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n\n    if (module.type === 'cache') {\n      this.modules.cache = module;\n    }\n\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n\n    return this;\n  };\n\n  I18n.prototype.changeLanguage = function changeLanguage(lng, callback) {\n    var _this4 = this;\n\n    var done = function done(err, l) {\n      _this4.translator.changeLanguage(l);\n\n      if (l) {\n        _this4.emit('languageChanged', l);\n        _this4.logger.log('languageChanged', l);\n      }\n\n      if (callback) callback(err, function () {\n        return _this4.t.apply(_this4, arguments);\n      });\n    };\n\n    var setLng = function setLng(l) {\n      if (l) {\n        _this4.language = l;\n        _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n        if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n      }\n\n      _this4.loadResources(function (err) {\n        done(err, l);\n      });\n    };\n\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      this.services.languageDetector.detect(setLng);\n    } else {\n      setLng(lng);\n    }\n  };\n\n  I18n.prototype.getFixedT = function getFixedT(lng, ns) {\n    var _this5 = this;\n\n    var fixedT = function fixedT(key) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var options = typeof opts === 'string' ? { defaultValue: opts } : _extends({}, opts);\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      return _this5.t(key, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    return fixedT;\n  };\n\n  I18n.prototype.t = function t() {\n    var _translator;\n\n    return this.translator && (_translator = this.translator).translate.apply(_translator, arguments);\n  };\n\n  I18n.prototype.exists = function exists() {\n    var _translator2;\n\n    return this.translator && (_translator2 = this.translator).exists.apply(_translator2, arguments);\n  };\n\n  I18n.prototype.setDefaultNamespace = function setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  };\n\n  I18n.prototype.loadNamespaces = function loadNamespaces(ns, callback) {\n    var _this6 = this;\n\n    if (!this.options.ns) return callback && callback();\n    if (typeof ns === 'string') ns = [ns];\n\n    ns.forEach(function (n) {\n      if (_this6.options.ns.indexOf(n) < 0) _this6.options.ns.push(n);\n    });\n\n    this.loadResources(callback);\n  };\n\n  I18n.prototype.loadLanguages = function loadLanguages(lngs, callback) {\n    if (typeof lngs === 'string') lngs = [lngs];\n    var preloaded = this.options.preload || [];\n\n    var newLngs = lngs.filter(function (lng) {\n      return preloaded.indexOf(lng) < 0;\n    });\n    // Exit early if all given languages are already preloaded\n    if (!newLngs.length) return callback();\n\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(callback);\n  };\n\n  I18n.prototype.dir = function dir(lng) {\n    if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n    if (!lng) return 'rtl';\n\n    var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n\n    return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n  };\n\n  /* eslint class-methods-use-this: 0 */\n\n\n  I18n.prototype.createInstance = function createInstance() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments[1];\n\n    return new I18n(options, callback);\n  };\n\n  I18n.prototype.cloneInstance = function cloneInstance() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n    var mergedOptions = _extends({}, this.options, options, { isClone: true });\n    var clone = new I18n(mergedOptions, callback);\n    var membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(function (m) {\n      clone[m] = _this7[m];\n    });\n    clone.translator = new Translator(clone.services, clone.options);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      clone.emit.apply(clone, [event].concat(args));\n    });\n    clone.init(mergedOptions, callback);\n\n    return clone;\n  };\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nreturn i18next;\n\n})));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.i18nextXHRBackend = factory());\n}(this, (function () { 'use strict';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\n\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction addQueryString(url, params) {\n  if (params && (typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object') {\n    var queryString = '',\n        e = encodeURIComponent;\n\n    // Must encode data\n    for (var paramName in params) {\n      queryString += '&' + e(paramName) + '=' + e(params[paramName]);\n    }\n\n    if (!queryString) {\n      return url;\n    }\n\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\n  }\n\n  return url;\n}\n\n// https://gist.github.com/Xeoncross/7663273\nfunction ajax(url, options, callback, data, cache) {\n\n  if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n    if (!cache) {\n      data['_t'] = new Date();\n    }\n    // URL encoded form data must be in querystring format\n    data = addQueryString('', data).slice(1);\n  }\n\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n\n  try {\n    var x;\n    if (XMLHttpRequest) {\n      x = new XMLHttpRequest();\n    } else {\n      x = new ActiveXObject('MSXML2.XMLHTTP.3.0');\n    }\n    x.open(data ? 'POST' : 'GET', url, 1);\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n    x.withCredentials = !!options.withCredentials;\n    if (data) {\n      x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType(\"application/json\");\n    }\n    var h = options.customHeaders;\n    if (h) {\n      for (var i in h) {\n        x.setRequestHeader(i, h[i]);\n      }\n    }\n    x.onreadystatechange = function () {\n      x.readyState > 3 && callback && callback(x.responseText, x);\n    };\n    x.send(data);\n  } catch (e) {\n    console && console.log(e);\n  }\n}\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getDefaults() {\n  return {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: 'locales/add/{{lng}}/{{ns}}',\n    allowMultiLoading: false,\n    parse: JSON.parse,\n    crossDomain: false,\n    ajax: ajax\n  };\n}\n\nvar Backend = function () {\n  function Backend(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Backend);\n\n    this.init(services, options);\n\n    this.type = 'backend';\n  }\n\n  _createClass(Backend, [{\n    key: 'init',\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults());\n    }\n  }, {\n    key: 'readMulti',\n    value: function readMulti(languages, namespaces, callback) {\n      var loadPath = this.options.loadPath;\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath(languages, namespaces);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, { lng: languages.join('+'), ns: namespaces.join('+') });\n\n      this.loadUrl(url, callback);\n    }\n  }, {\n    key: 'read',\n    value: function read(language, namespace, callback) {\n      var loadPath = this.options.loadPath;\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath([language], [namespace]);\n      }\n\n      var url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace });\n\n      this.loadUrl(url, callback);\n    }\n  }, {\n    key: 'loadUrl',\n    value: function loadUrl(url, callback) {\n      var _this = this;\n\n      this.options.ajax(url, this.options, function (data, xhr) {\n        if (xhr.status >= 500 && xhr.status < 600) return callback('failed loading ' + url, true /* retry */);\n        if (xhr.status >= 400 && xhr.status < 500) return callback('failed loading ' + url, false /* no retry */);\n\n        var ret = void 0,\n            err = void 0;\n        try {\n          ret = _this.options.parse(data, url);\n        } catch (e) {\n          err = 'failed parsing ' + url + ' to json';\n        }\n        if (err) return callback(err, false);\n        callback(null, ret);\n      });\n    }\n  }, {\n    key: 'create',\n    value: function create(languages, namespace, key, fallbackValue) {\n      var _this2 = this;\n\n      if (typeof languages === 'string') languages = [languages];\n\n      var payload = {};\n      payload[key] = fallbackValue || '';\n\n      languages.forEach(function (lng) {\n        var url = _this2.services.interpolator.interpolate(_this2.options.addPath, { lng: lng, ns: namespace });\n\n        _this2.options.ajax(url, _this2.options, function (data, xhr) {\n          //const statusCode = xhr.status.toString();\n          // TODO: if statusCode === 4xx do log\n        }, payload);\n      });\n    }\n  }]);\n\n  return Backend;\n}();\n\nBackend.type = 'backend';\n\nreturn Backend;\n\n})));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.i18nextLocalStorageCache = factory());\n}(this, (function () { 'use strict';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\n\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\n\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar storage = {\n  setItem: function setItem(key, value) {\n    if (window.localStorage) {\n      try {\n        window.localStorage.setItem(key, value);\n      } catch (e) {\n        // f.log('failed to set value for key \"' + key + '\" to localStorage.');\n      }\n    }\n  },\n  getItem: function getItem(key, value) {\n    if (window.localStorage) {\n      try {\n        return window.localStorage.getItem(key, value);\n      } catch (e) {\n        // f.log('failed to get value for key \"' + key + '\" from localStorage.');\n      }\n    }\n    return undefined;\n  }\n};\n\nfunction getDefaults() {\n  return {\n    enabled: false,\n    prefix: 'i18next_res_',\n    expirationTime: 7 * 24 * 60 * 60 * 1000,\n    versions: {}\n  };\n}\n\nvar Cache = function () {\n  function Cache(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cache);\n\n    this.init(services, options);\n\n    this.type = 'cache';\n    this.debouncedStore = debounce(this.store, 10000);\n  }\n\n  _createClass(Cache, [{\n    key: 'init',\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults());\n    }\n  }, {\n    key: 'load',\n    value: function load(lngs, callback) {\n      var _this = this;\n\n      var store = {};\n      var nowMS = new Date().getTime();\n\n      if (!window.localStorage || !lngs.length) {\n        return callback(null, null);\n      }\n\n      var todo = lngs.length;\n\n      lngs.forEach(function (lng) {\n        var local = storage.getItem(_this.options.prefix + lng);\n\n        if (local) {\n          local = JSON.parse(local);\n          if (\n          // expiration field is mandatory, and should not be expired\n          local.i18nStamp && local.i18nStamp + _this.options.expirationTime > nowMS &&\n\n          // there should be no language version set, or if it is, it should match the one in translation\n          _this.options.versions[lng] === local.i18nVersion) {\n            delete local.i18nVersion;\n            store[lng] = local;\n          }\n        }\n\n        todo -= 1;\n        if (todo === 0) {\n          callback(null, store);\n        }\n      });\n      return undefined;\n    }\n  }, {\n    key: 'store',\n    value: function store(storeParam) {\n      var store = storeParam;\n      if (window.localStorage) {\n        for (var m in store) {\n          // eslint-disable-line\n          // timestamp\n          store[m].i18nStamp = new Date().getTime();\n\n          // language version (if set)\n          if (this.options.versions[m]) {\n            store[m].i18nVersion = this.options.versions[m];\n          }\n\n          // save\n          storage.setItem(this.options.prefix + m, JSON.stringify(store[m]));\n        }\n      }\n    }\n  }, {\n    key: 'save',\n    value: function save(store) {\n      this.debouncedStore(store);\n    }\n  }]);\n\n  return Cache;\n}();\n\nCache.type = 'cache';\n\nreturn Cache;\n\n})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('i18nextSprintfPostProcessor', factory) :\n    (global.i18nextSprintfPostProcessor = factory());\n}(this, function () { 'use strict';\n\n    var babelHelpers = {};\n    babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n    };\n    babelHelpers;\n\n    var re = {\n        not_string: /[^s]/,\n        number: /[diefg]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijosuxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[\\+\\-]/\n    };\n\n    function sprintf() {\n        var key = arguments[0],\n            cache = sprintf.cache;\n        if (!(cache[key] && cache.hasOwnProperty(key))) {\n            cache[key] = sprintf.parse(key);\n        }\n        return sprintf.format.call(null, cache[key], arguments);\n    }\n\n    sprintf.format = function (parse_tree, argv) {\n        var cursor = 1,\n            tree_length = parse_tree.length,\n            node_type = \"\",\n            arg,\n            output = [],\n            i,\n            k,\n            match,\n            pad,\n            pad_character,\n            pad_length,\n            is_positive = true,\n            sign = \"\";\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === \"string\") {\n                output[output.length] = parse_tree[i];\n            } else if (node_type === \"array\") {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) {\n                    // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(sprintf(\"[sprintf] property '%s' does not exist\", match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                } else if (match[1]) {\n                    // positional argument (explicit)\n                    arg = argv[match[1]];\n                } else {\n                    // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (get_type(arg) == \"function\") {\n                    arg = arg();\n                }\n\n                if (re.not_string.test(match[8]) && re.not_json.test(match[8]) && get_type(arg) != \"number\" && isNaN(arg)) {\n                    throw new TypeError(sprintf(\"[sprintf] expecting number but found %s\", get_type(arg)));\n                }\n\n                if (re.number.test(match[8])) {\n                    is_positive = arg >= 0;\n                }\n\n                switch (match[8]) {\n                    case \"b\":\n                        arg = arg.toString(2);\n                        break;\n                    case \"c\":\n                        arg = String.fromCharCode(arg);\n                        break;\n                    case \"d\":\n                    case \"i\":\n                        arg = parseInt(arg, 10);\n                        break;\n                    case \"j\":\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0);\n                        break;\n                    case \"e\":\n                        arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential();\n                        break;\n                    case \"f\":\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg);\n                        break;\n                    case \"g\":\n                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg);\n                        break;\n                    case \"o\":\n                        arg = arg.toString(8);\n                        break;\n                    case \"s\":\n                        arg = (arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg;\n                        break;\n                    case \"u\":\n                        arg = arg >>> 0;\n                        break;\n                    case \"x\":\n                        arg = arg.toString(16);\n                        break;\n                    case \"X\":\n                        arg = arg.toString(16).toUpperCase();\n                        break;\n                }\n                if (re.json.test(match[8])) {\n                    output[output.length] = arg;\n                } else {\n                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                        sign = is_positive ? \"+\" : \"-\";\n                        arg = arg.toString().replace(re.sign, \"\");\n                    } else {\n                        sign = \"\";\n                    }\n                    pad_character = match[4] ? match[4] === \"0\" ? \"0\" : match[4].charAt(1) : \" \";\n                    pad_length = match[6] - (sign + arg).length;\n                    pad = match[6] ? pad_length > 0 ? str_repeat(pad_character, pad_length) : \"\" : \"\";\n                    output[output.length] = match[5] ? sign + arg + pad : pad_character === \"0\" ? sign + pad + arg : pad + sign + arg;\n                }\n            }\n        }\n        return output.join(\"\");\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function (fmt) {\n        var _fmt = fmt,\n            match = [],\n            parse_tree = [],\n            arg_names = 0;\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = match[0];\n            } else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = \"%\";\n            } else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [],\n                        replacement_field = match[2],\n                        field_match = [];\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list[field_list.length] = field_match[1];\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== \"\") {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1];\n                            } else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1];\n                            } else {\n                                throw new SyntaxError(\"[sprintf] failed to parse named argument key\");\n                            }\n                        }\n                    } else {\n                        throw new SyntaxError(\"[sprintf] failed to parse named argument key\");\n                    }\n                    match[2] = field_list;\n                } else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\");\n                }\n                parse_tree[parse_tree.length] = match;\n            } else {\n                throw new SyntaxError(\"[sprintf] unexpected placeholder\");\n            }\n            _fmt = _fmt.substring(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    function vsprintf(fmt, argv, _argv) {\n        _argv = (argv || []).slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    }\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        return Array(multiplier + 1).join(input);\n    }\n\n    var index = {\n      name: 'sprintf',\n      type: 'postProcessor',\n\n      process: function process(value, key, options) {\n        if (!options.sprintf) return value;\n\n        if (Object.prototype.toString.apply(options.sprintf) === '[object Array]') {\n          return vsprintf(value, options.sprintf);\n        } else if (babelHelpers.typeof(options.sprintf) === 'object') {\n          return sprintf(value, options.sprintf);\n        }\n\n        return value;\n      },\n      overloadTranslationOptionHandler: function overloadTranslationOptionHandler(args) {\n        var values = [];\n\n        for (var i = 1; i < args.length; i++) {\n          values.push(args[i]);\n        }\n\n        return {\n          postProcess: 'sprintf',\n          sprintf: values\n        };\n      }\n    };\n\n    return index;\n\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.i18nextBrowserLanguageDetector = factory());\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers;\n\n  var arr = [];\n  var each = arr.forEach;\n  var slice = arr.slice;\n\n  function defaults(obj) {\n    each.call(slice.call(arguments, 1), function (source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === undefined) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  }\n\n  var cookie = {\n    create: function create(name, value, minutes, domain) {\n      var expires = void 0;\n      if (minutes) {\n        var date = new Date();\n        date.setTime(date.getTime() + minutes * 60 * 1000);\n        expires = '; expires=' + date.toGMTString();\n      } else expires = '';\n      domain = domain ? 'domain=' + domain + ';' : '';\n      document.cookie = name + '=' + value + expires + ';' + domain + 'path=/';\n    },\n\n    read: function read(name) {\n      var nameEQ = name + '=';\n      var ca = document.cookie.split(';');\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1, c.length);\n        }if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n      }\n      return null;\n    },\n\n    remove: function remove(name) {\n      this.create(name, '', -1);\n    }\n  };\n\n  var cookie$1 = {\n    name: 'cookie',\n\n    lookup: function lookup(options) {\n      var found = void 0;\n\n      if (options.lookupCookie && typeof document !== 'undefined') {\n        var c = cookie.read(options.lookupCookie);\n        if (c) found = c;\n      }\n\n      return found;\n    },\n    cacheUserLanguage: function cacheUserLanguage(lng, options) {\n      if (options.lookupCookie && typeof document !== 'undefined') {\n        cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain);\n      }\n    }\n  };\n\n  var querystring = {\n    name: 'querystring',\n\n    lookup: function lookup(options) {\n      var found = void 0;\n\n      if (typeof window !== 'undefined') {\n        var query = window.location.search.substring(1);\n        var params = query.split('&');\n        for (var i = 0; i < params.length; i++) {\n          var pos = params[i].indexOf('=');\n          if (pos > 0) {\n            var key = params[i].substring(0, pos);\n            if (key === options.lookupQuerystring) {\n              found = params[i].substring(pos + 1);\n            }\n          }\n        }\n      }\n\n      return found;\n    }\n  };\n\n  var hasLocalStorageSupport = void 0;\n  try {\n    hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n\n  var localStorage = {\n    name: 'localStorage',\n\n    lookup: function lookup(options) {\n      var found = void 0;\n\n      if (options.lookupLocalStorage && hasLocalStorageSupport) {\n        var lng = window.localStorage.getItem(options.lookupLocalStorage);\n        if (lng) found = lng;\n      }\n\n      return found;\n    },\n    cacheUserLanguage: function cacheUserLanguage(lng, options) {\n      if (options.lookupLocalStorage && hasLocalStorageSupport) {\n        window.localStorage.setItem(options.lookupLocalStorage, lng);\n      }\n    }\n  };\n\n  var navigator$1 = {\n    name: 'navigator',\n\n    lookup: function lookup(options) {\n      var found = [];\n\n      if (typeof navigator !== 'undefined') {\n        if (navigator.languages) {\n          // chrome only; not an array, so can't use .push.apply instead of iterating\n          for (var i = 0; i < navigator.languages.length; i++) {\n            found.push(navigator.languages[i]);\n          }\n        }\n        if (navigator.userLanguage) {\n          found.push(navigator.userLanguage);\n        }\n        if (navigator.language) {\n          found.push(navigator.language);\n        }\n      }\n\n      return found.length > 0 ? found : undefined;\n    }\n  };\n\n  var htmlTag = {\n    name: 'htmlTag',\n\n    lookup: function lookup(options) {\n      var found = void 0;\n      var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n\n      if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n        found = htmlTag.getAttribute('lang');\n      }\n\n      return found;\n    }\n  };\n\n  function getDefaults() {\n    return {\n      order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag'],\n      lookupQuerystring: 'lng',\n      lookupCookie: 'i18next',\n      lookupLocalStorage: 'i18nextLng',\n\n      // cache user language\n      caches: ['localStorage'],\n      excludeCacheFor: ['cimode']\n      //cookieMinutes: 10,\n      //cookieDomain: 'myDomain'\n    };\n  }\n\n  var Browser = function () {\n    function Browser(services) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      babelHelpers.classCallCheck(this, Browser);\n\n      this.type = 'languageDetector';\n      this.detectors = {};\n\n      this.init(services, options);\n    }\n\n    babelHelpers.createClass(Browser, [{\n      key: 'init',\n      value: function init(services) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n        var i18nOptions = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n        this.services = services;\n        this.options = defaults(options, this.options || {}, getDefaults());\n        this.i18nOptions = i18nOptions;\n\n        this.addDetector(cookie$1);\n        this.addDetector(querystring);\n        this.addDetector(localStorage);\n        this.addDetector(navigator$1);\n        this.addDetector(htmlTag);\n      }\n    }, {\n      key: 'addDetector',\n      value: function addDetector(detector) {\n        this.detectors[detector.name] = detector;\n      }\n    }, {\n      key: 'detect',\n      value: function detect(detectionOrder) {\n        var _this = this;\n\n        if (!detectionOrder) detectionOrder = this.options.order;\n\n        var detected = [];\n        detectionOrder.forEach(function (detectorName) {\n          if (_this.detectors[detectorName]) {\n            var lookup = _this.detectors[detectorName].lookup(_this.options);\n            if (lookup && typeof lookup === 'string') lookup = [lookup];\n            if (lookup) detected = detected.concat(lookup);\n          }\n        });\n\n        var found = void 0;\n        detected.forEach(function (lng) {\n          if (found) return;\n          var cleanedLng = _this.services.languageUtils.formatLanguageCode(lng);\n          if (_this.services.languageUtils.isWhitelisted(cleanedLng)) found = cleanedLng;\n        });\n\n        return found || this.i18nOptions.fallbackLng[0];\n      }\n    }, {\n      key: 'cacheUserLanguage',\n      value: function cacheUserLanguage(lng, caches) {\n        var _this2 = this;\n\n        if (!caches) caches = this.options.caches;\n        if (!caches) return;\n        if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n        caches.forEach(function (cacheName) {\n          if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n        });\n      }\n    }]);\n    return Browser;\n  }();\n\n  Browser.type = 'languageDetector';\n\n  return Browser;\n\n}));\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}